
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

---
variables: 
- group: VariableGpAzurepipeline
trigger:
  - none  /No trigger else uncomment below 
  #branches:
   #include:
   #- main
   #paths:
    #include:
    #- trigger if any changes committed
pool: TFAG     // Self Hosted Agent in my case or use Microsoft Hosted Agent
#variables: //used above with variables group
 #subscription_id: ''
 #berg: $tfstate 
 #bestr: 'tfstaat' 
 #becont: $becont 
 #bekey: $bekey

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        steps:
          - task: TerraformInstaller@1
            displayName: TF-INSTALLATION
            inputs: 
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            displayName: INITIALIZATION
            inputs:
              provider: 'azurerm'
              command: 'init' 
              commandOptions: '--reconfigure'

              backendServiceArm: 'tfdevops'
              backendAzureRmResourceGroupName: 'tfstate'
              backendAzureRmStorageAccountName: 'tfstaat'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'devops.terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: VALIDATION
            inputs:
              provider: 'azurerm'
              command: 'validate'

  - stage: tfdeploy
    jobs:
      - job: deploy
        steps:
          - task: TerraformInstaller@1
            displayName: TF-INSTALLATION
            inputs: 
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            displayName: INITIALIZATION
            inputs:
              provider: 'azurerm'
              command: 'init' 
             #commandOptions: '--reconfigure'

              backendServiceArm: 'tfdevops'
              backendAzureRmResourceGroupName: 'tfstate'
              backendAzureRmStorageAccountName: 'tfstaat'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'devops.terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: PLAN
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'tfdevops'
          - task: TerraformTaskV4@4
            displayName: Waiting for APPROVAL
            timeoutInMinutes: 60
            inputs:
              notifyUsers: 'taoufik.m.mohamed@hotmail.com'
              instructions: 'Review'
              environmentServiceNameAzureRM: 'tfdevops'
              backendServiceArm: 'tfdevops'
              backendAzureRmResourceGroupName: 'tfstate'
              backendAzureRmStorageAccountName: 'tfstaat'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'devops.terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: DEPLOYMENT
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: '--auto-approve'
              environmentServiceNameAzureRM: 'tfdevops'
